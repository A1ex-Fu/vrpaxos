import "common/request.proto";

package specpaxos.vr.proto;

message RequestMessage {
    required specpaxos.Request req = 1;

    // for testing purposes
    // optional string reqStr = 2;
}

message ReplyMessage {
    required uint64 view = 1;
    required uint64 opnum = 2;
    required bytes reply = 3;
    required uint64 clientreqid = 4;
}

message UnloggedRequestMessage {
    required specpaxos.UnloggedRequest req = 1;
}

message UnloggedReplyMessage {
    required bytes reply = 1;
}

message PrepareMessage {
    required uint64 view = 1;
    required uint64 opnum = 2;
    required uint64 batchstart = 3;
    repeated Request request = 4;
}

message PrepareOKMessage {
    required uint64 view = 1;
    required uint64 opnum = 2;
    required uint32 replicaIdx = 3;
    required uint64 lastCommitted = 4;
}

message CommitMessage {
    required uint64 view = 1;
    required uint64 opnum = 2;    
}

message RequestStateTransferMessage {
    required uint64 view = 1;
    required uint64 opnum = 2;    
}

message StateTransferMessage {
    message LogEntry {
        required uint64 view = 1;
        required uint64 opnum = 2;
        required specpaxos.Request request = 3;
        optional uint32 state = 4;
        optional bytes hash = 5;
    }
    required uint64 view = 1;
    required uint64 opnum = 2;
    repeated LogEntry entries = 3;
}

message StartViewChangeMessage {
    required uint64 view = 1;
    required uint32 replicaIdx = 2;
    required uint64 lastCommitted = 3;
}

message DoViewChangeMessage {
    message LogEntry {
        required uint64 view = 1;
        required uint64 opnum = 2;
        required specpaxos.Request request = 3;
        optional uint32 state = 4;
        optional bytes hash = 5;
    }
    required uint64 view = 1;
    required uint64 lastNormalView = 2;
    required uint64 lastOp = 3;
    required uint64 lastCommitted = 4;
    repeated LogEntry entries = 5;
    required uint32 replicaIdx = 6;
}

message StartViewMessage {
    message LogEntry {
        required uint64 view = 1;
        required uint64 opnum = 2;
        required specpaxos.Request request = 3;
        optional uint32 state = 4;
        optional bytes hash = 5;
    }
    required uint64 view = 1;
    required uint64 lastOp = 2;
    required uint64 lastCommitted = 3;
    repeated LogEntry entries = 4;
}

message RecoveryMessage {
    required uint32 replicaIdx = 1;
    required uint64 nonce = 2;
}

message RecoveryResponseMessage {
    message LogEntry {
        required uint64 view = 1;
        required uint64 opnum = 2;
        required specpaxos.Request request = 3;
        optional uint32 state = 4;
        optional bytes hash = 5;
    }
    required uint64 view = 1;
    required uint64 nonce = 2;
    repeated LogEntry entries = 3;
    optional uint64 lastOp = 4;
    optional uint64 lastCommitted = 5;
    required uint32 replicaIdx = 6;
}






/**
    New messages are below
    ______________________________
    basic translations:
        ballot --> view
        slotNum --> opnum
        command --> request
        log --> log (wow!)
        slotOut --> lastCommitted
        slotIn --> lastOp
        sender --> replicaIdx
*/


message WitnessDecision {
    required uint64 view = 1;
    required uint64 opnum = 2;
    required uint32 replicaIdx = 3;
    required specpaxos.Request req = 4;

    // for testing purposes
    // optional string reqStr = 5; 
}

message PaxosAck {
    required uint64 clientreqid = 1;
    required uint32 replicaIdx = 2;
    required specpaxos.Request req = 3;
    required uint64 n = 4;
}

message ChainMessage {
    required uint64 view = 1;
    required uint64 opnum = 2;
    required uint32 replicaIdx = 3;
    required specpaxos.Request req = 4;
}

message Heartbeat {
    required uint64 view = 1;
    required uint64 slotExecuted = 2;
    required uint64 cleanUpTo = 3;
}

message HeartbeatReply {
    required uint64 view = 1;
    required uint64 slotOut = 2;
}